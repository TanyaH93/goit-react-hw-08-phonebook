{"version":3,"sources":["components/ContactsForm/ContactsForm.js","components/ContactsForm/ContactsFormContainer.js","components/ContactsListItem/ContactsListItem.js","components/ContactsListItem/ContactsListItemContainer.js","components/ContactsList/ContactsList.js","components/ContactsList/ContactsListContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","views/ContactsView.js"],"names":["initialState","name","number","ContactsForm","state","handleInput","event","setState","target","value","handleSubmit","preventDefault","props","list","some","elem","toLowerCase","duplicatedContactError","Error","newContact","classes","this","Typography","variant","component","gutterBottom","align","paragraph","className","form","size","onSubmit","Input","id","type","onInput","aria-describedby","startAdornment","InputAdornment","position","FormHelperText","minLength","Button","color","disabled","React","Component","withStyles","display","width","maxWidth","margin","marginBottom","connect","phonebookSelectors","getAllContacts","phonebookOperations","addContact","phonebookActions","addContactError","useStyles","makeStyles","theme","link","justifyContent","backgroundColor","ContactsListItem","ListItem","divider","onClick","deleteContact","startIcon","ownProps","item","getContactById","styles","root","blueGrey","ContactsList","List","aria-label","filteredContacts","map","key","getVisibleContacts","field","wrapper","padding","container","Filter","sendFilter","TextField","filterFromState","label","placeholder","getPhonebookFilter","filterContacts","contacts","length"],"mappings":"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","file":"static/js/7.b71e11bd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Input,\n  FormHelperText,\n  InputAdornment,\n} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport AddIcCallIcon from '@material-ui/icons/AddIcCall';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  form: {\n    display: 'block',\n    width: '100%',\n    maxWidth: 200,\n    margin: '0 auto',\n    marginBottom: '24px',\n  },\n};\n\nconst initialState = { name: '', number: '' };\n\nclass ContactsForm extends React.Component {\n  static propTypes = {\n    list: PropTypes.arrayOf(PropTypes.object),\n    newContact: PropTypes.func.isRequired,\n    duplicatedContactError: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...initialState,\n  };\n\n  handleInput = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (\n      this.props.list.some(\n        elem => elem.name.toLowerCase() === this.state.name.toLowerCase(),\n      )\n    ) {\n      return this.props.duplicatedContactError(\n        Error(`You already have contact with name ${this.state.name}`),\n      );\n    }\n    this.props.newContact(this.state);\n    this.setState({ ...initialState });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Typography\n          variant=\"h3\"\n          component=\"h3\"\n          gutterBottom\n          align=\"center\"\n          paragraph={true}\n        >\n          Create your contacts here:\n        </Typography>\n        <form\n          className={classes.form}\n          size=\"medium\"\n          onSubmit={this.handleSubmit}\n        >\n          <Input\n            id=\"name-input\"\n            name=\"name\"\n            type=\"string\"\n            onInput={this.handleInput}\n            aria-describedby=\"my-helper-text\"\n            size=\"medium\"\n            value={this.state.name}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <AccountCircle />\n              </InputAdornment>\n            }\n          />\n          <FormHelperText id=\"name-helper-text\">Enter name</FormHelperText>\n\n          <Input\n            id=\"phone-input\"\n            name=\"number\"\n            type=\"number\"\n            minLength={7}\n            onInput={this.handleInput}\n            aria-describedby=\"my-helper-text\"\n            size=\"medium\"\n            value={this.state.number}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <AddIcCallIcon />\n              </InputAdornment>\n            }\n          />\n          <FormHelperText id=\"phone-helper-text\">Enter phone</FormHelperText>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            disabled={!this.state.name || !this.state.number}\n            type=\"submit\"\n          >\n            Add Contact\n          </Button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ContactsForm);\n","import { connect } from 'react-redux';\n\nimport {\n  phonebookOperations,\n  phonebookSelectors,\n  phonebookActions,\n} from '../../redux/phonebook';\n\nimport ContactsForm from './ContactsForm';\n\nconst mapStateToProps = state => {\n  return {\n    list: phonebookSelectors.getAllContacts(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  newContact: phonebookOperations.addContact,\n  duplicatedContactError: phonebookActions.addContactError,\n})(ContactsForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n    maxWidth: 360,\n    margin: '0 auto',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst ContactsListItem = props => {\n  const classes = useStyles();\n  return (\n    <ListItem divider className={classes.link}>\n      <Typography variant=\"subtitle1\">\n        {props.name} : {props.number}\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.deleteContact(props.id)}\n        startIcon={<DeleteIcon />}\n      >\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsListItem;\n","import { connect } from 'react-redux';\n\nimport ContactsListItem from './ContactsListItem';\nimport { phonebookSelectors, phonebookOperations } from '../../redux/phonebook';\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = phonebookSelectors.getContactById(state, ownProps.id);\n  return { ...item };\n};\n\nexport default connect(mapStateToProps, {\n  deleteContact: phonebookOperations.deleteContact,\n})(ContactsListItem);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactsListItem from '../ContactsListItem';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Typography, List } from '@material-ui/core';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nconst mainBackground = blueGrey[50];\n\nconst styles = {\n  root: {\n    width: '100%',\n    maxWidth: 540,\n    backgroundColor: mainBackground,\n    margin: '0 auto',\n  },\n};\n\nclass ContactsList extends Component {\n  static propTypes = {\n    filteredContacts: PropTypes.arrayOf(PropTypes.object),\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n        <Typography\n          variant=\"h4\"\n          component=\"h4\"\n          gutterBottom\n          align=\"center\"\n          paragraph={true}\n        >\n          Your contacts\n        </Typography>\n        <List\n          component=\"ul\"\n          aria-label=\"main mailbox folders\"\n          className={classes.root}\n        >\n          {this.props.filteredContacts.map(elem => (\n            <ContactsListItem key={elem.id} id={elem.id} />\n          ))}\n        </List>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ContactsList);\n","import { connect } from 'react-redux';\n\nimport ContactsList from './ContactsList';\nimport { phonebookSelectors } from '../../redux/phonebook';\n\nconst mapStateToProps = state => {\n  return {\n    filteredContacts: phonebookSelectors.getVisibleContacts(state),\n  };\n};\n\nexport default connect(mapStateToProps)(ContactsList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nconst mainBackground = blueGrey[50];\n\nconst styles = {\n  field: {\n    backgroundColor: '#fff',\n  },\n  wrapper: {\n    backgroundColor: mainBackground,\n    padding: 20,\n    marginBottom: 24,\n  },\n  container: {\n    margin: '0 auto',\n    maxWidth: 200,\n  },\n};\n\nclass Filter extends Component {\n  static propTypes = {\n    filterFromState: PropTypes.string,\n    sendFilter: PropTypes.func.isRequired,\n  };\n\n  handleInput = event => {\n    this.props.sendFilter(event.target.value);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.wrapper}>\n        <div className={classes.container}>\n          <TextField\n            name=\"filter\"\n            onInput={this.handleInput}\n            value={this.props.filterFromState}\n            className={classes.field}\n            id=\"outlined-helperText\"\n            label=\"Filter contacts\"\n            placeholder=\"Input Filter\"\n            variant=\"outlined\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Filter);\n","import { connect } from 'react-redux';\n\nimport Filter from './Filter';\nimport { phonebookOperations, phonebookSelectors } from '../../redux/phonebook';\n\nconst mapStateToProps = state => {\n  return {\n    filterFromState: phonebookSelectors.getPhonebookFilter(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  sendFilter: phonebookOperations.filterContacts,\n})(Filter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { phonebookSelectors } from '../redux/phonebook';\nimport ContactsForm from '../components/ContactsForm';\nimport ContactsList from '../components/ContactsList';\nimport Filter from '../components/Filter';\n\nconst ContactsView = props => {\n  return (\n    <>\n      <ContactsForm />\n      {props.contacts.length > 1 && <Filter />}\n      {props.contacts.length > 0 && <ContactsList />}\n    </>\n  );\n};\n\nContactsView.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = state => {\n  return { contacts: phonebookSelectors.getAllContacts(state) };\n};\n\nexport default connect(mapStateToProps)(ContactsView);\n"],"sourceRoot":""}